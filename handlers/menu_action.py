from aiogram import Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
import datetime
from functions.today_absences import today_stuff_absences
from functions.get_users_list import get_user_id_list
from functions.report_by_params import get_report_by_params
from functions.subscribe import get_subs_unsubs
from functions.week_absences import get_weekly_absences
from keyboards.output_by_params_kb import department_kb, type_of_absence_kb, period_kb
from keyboards.subscribe_kb import get_user_id_kb
from state.output_by_params_state import ParamsState
from state.subs import IdState


async def help_info(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id, f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –∫–æ–ª–ª–µ–≥–∞!\n\n'
                                                 f'–≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –≤—Ä–µ–º–µ–Ω–∏. –ó–∞—á–µ–º –∏—Å–∫–∞—Ç—å —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ç–µ–≤–æ–º –¥–∏—Å–∫–µ, '
                                                 f'–µ—Å–ª–∏ –º–æ–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –≤—Å–µ–≥–æ –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é?üòâ\n\n'
                                                 f'–ë–æ—Ç —É–º–µ–µ—Ç:\n'
                                                 f'- –§–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å - /today\n'
                                                 f'- –§–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å—É—Ç—Å–≤—É—é—â–∏—Ö –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º - /abs_param\n'
                                                 f'- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å—É—Ç–≤—É—é—â–∏—Ö –Ω–∞ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–µ. –†–∞—Å—Å—ã–ª–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –≤ 8:30.\n'
                                                 f'–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è  –∏–ª–∏ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /subscribe\n\n'
                                                 f'–ù–∞–¥–µ—é—Å—å, –±–æ—Ç –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–µ–Ω –í–∞–ºüòä\n\n'
                                                 f'<i>—Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞</i>')


async def get_today_absences(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id, f'–û—Ç—Å—É—Ç—Å–≤—É—é—â–∏–µ —Å–µ–≥–æ–¥–Ω—è (<b>{datetime.date.today().strftime("%d.%m.%Y")}</b>):\n\n{today_stuff_absences()}\n')


async def weekly_absences_info(bot: Bot):
    for user_id in get_user_id_list():
        await bot.send_message(user_id, f'–°–ø–∏—Å–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–µ:\n\n{get_weekly_absences()}\n')


async def get_id(message: Message, bot: Bot, state: FSMContext):
    await bot.send_message(message.from_user.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', reply_markup=get_user_id_kb())
    await state.set_state(IdState.user_tg_id)
    await state.update_data(user_tg_id=message.from_user.id)


async def get_subscribe(call: CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup(reply_markup=None)
    await state.update_data(action=call.data)
    create_data = await state.get_data()
    print(create_data)
    await call.message.answer(f'{get_subs_unsubs(create_data)}')


async def get_params_for_report(message: Message, state: FSMContext, bot: Bot):
    await bot.send_message(message.from_user.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è: ', reply_markup=type_of_absence_kb())
    await state.set_state(ParamsState.type)


async def select_type(call: CallbackQuery, state: FSMContext):
    await call.message.answer(f'–í–∏–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤—ã–±—Ä–∞–Ω \n'
                              f'<b>–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª:</b> ')
    await state.update_data(type=call.data)
    await call.message.edit_reply_markup(reply_markup=department_kb())
    await state.set_state(ParamsState.department)


async def select_department(call: CallbackQuery, state: FSMContext):
    await call.message.answer(f'–û—Ç–¥–µ–ª –≤—ã–±—Ä–∞–Ω\n'
                              f'<b>–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:</b> ')
    await state.update_data(department=call.data)
    await call.message.edit_reply_markup(reply_markup=period_kb())
    await state.set_state(ParamsState.period)


async def select_period(call: CallbackQuery, state: FSMContext):
    await call.message.answer(f'–ü–µ—Ä–∏–æ–¥ –≤—ã–±—Ä–∞–Ω.\n<b>–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç—á–µ—Ç</b>')
    await call.message.edit_reply_markup(reply_markup=None)
    await state.update_data(period=call.data)

    create_data = await state.get_data()
    print(create_data)

    await call.message.answer(f'<b>–û—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω:</b>\n\n{get_report_by_params(create_data)}\n')
